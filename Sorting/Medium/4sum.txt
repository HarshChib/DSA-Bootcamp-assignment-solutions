class Solution {
    public List < List < Integer >> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List < List < Integer >> res = new ArrayList < > ();
        int n = nums.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int xtarget = target - (nums[i] + nums[j]);
                int low = j + 1;
                int high = n - 1;
                while (low < high) {
                    if (nums[low] + nums[high] == xtarget) {
                        res.add(Arrays.asList(nums[i], nums[j], nums[low], nums[high]));
                        while (low < high && nums[low] == nums[low + 1]) low++;
                        while (low < high && nums[high] == nums[high - 1]) high--;
                    }
                    if (nums[low] + nums[high] > xtarget)
                        high--;
                    else
                        low++;
                }
                while (j < nums.length - 1 && nums[j] == nums[j + 1]) j++;
            }
            while (i < nums.length - 1 && nums[i] == nums[i + 1]) i++;
        }


        return res;
    }
}